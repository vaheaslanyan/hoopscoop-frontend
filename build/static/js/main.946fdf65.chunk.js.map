{"version":3,"sources":["shared/components/FormElements/Button.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Card.js","shared/components/UIElements/ErrorModal.js","shared/hooks/http-hook.js","shared/context/auth-context.js","shared/components/UIElements/Modal.js","shared/components/UIElements/Backdrop.js","shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","shared/components/UIElements/usePosition.js","shared/components/UIElements/AllPlacesMap.js","places/components/AllPlaces.js","App.js","index.js"],"names":["Button","props","href","className","size","inverse","danger","children","to","exact","type","onClick","disabled","LoadingSpinner","asOverlay","Card","style","ErrorModal","onCancel","onClear","header","show","error","footer","useHttpClient","useState","setError","isLoading","setIsLoading","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","AuthContext","createContext","isLoggedIn","userId","token","login","logout","ModalOverlay","content","headerClass","onSubmit","event","preventDefault","contentClass","footerClass","ReactDOM","createPortal","document","getElementById","Modal","Fragment","in","mountOnEnter","unmountOnExit","timeout","classNames","Backdrop","Map","mapRef","center","zoom","map","window","google","maps","Marker","position","ref","PlaceItem","auth","useContext","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","confirmDeleteHandler","process","REACT_APP_BACKEND_URL","id","Authorization","onDelete","address","coordinates","src","image","alt","title","description","creatorName","creatorId","PlaceList","items","length","place","key","creator","_id","name","location","onDeletePlace","logoutTimer","MainHeader","NavLinks","SideDrawer","CSSTransition","MainNavigation","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","defaultSettings","enableHighAccuracy","Infinity","maximumAge","watch","settings","setPosition","onChange","coords","timestamp","latitude","longitude","accuracy","onError","geo","navigator","geolocation","watcher","watchPosition","getCurrentPosition","clearWatch","usePosition","currentPosition","lat","lng","markers","console","log","icon","marker","AllPlaces","loadedPlaces","setLoadedPlaces","places","fetchPlaces","AllPlacesMap","deletedPlaceId","prevPlaces","NewPlace","React","lazy","UserPlaces","UpdatePlace","Auth","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.946fdf65.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from \"react\";\n\nimport \"./Card.css\";\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import { useState, useCallback, useRef, useEffect } from \"react\";\n\nexport const useHttpClient = () => {\n  //hooks generally have use at the begining of the name\n  const [error, setError] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const activeHttpRequests = useRef([]);\n\n  // useCallback to make sure we don't have any unneccessary rerendering or infinite loops\n  const sendRequest = useCallback(async (\n    // = something sets a default value\n    url,\n    method = \"GET\",\n    body = null,\n    headers = {}\n  ) => {\n    setIsLoading(true);\n    const httpAbortCtrl = new AbortController(); //this is an API supported in modern broesers\n    activeHttpRequests.current.push(httpAbortCtrl);\n    try {\n      const response = await fetch(url, {\n        method,\n        body,\n        headers,\n        signal: httpAbortCtrl.signal //this whole signal Abort controller logic cancels the request in case while waiting for response the user changes a page, this avoids an error due to trying to update a state of a component that is no longer on the screen\n      });\n\n      const responseData = await response.json();\n\n      //filtering all the old controllers\n      activeHttpRequests.current = activeHttpRequests.current.filter(\n        reqCtrl => reqCtrl !== httpAbortCtrl\n      );\n\n      if (!response.ok) {\n        throw new Error(responseData.message);\n      }\n      setIsLoading(false);\n      return responseData;\n    } catch (err) {\n      setError(err.message);\n      setIsLoading(false);\n      throw err;\n    }\n  }, []);\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  // part of the logic that makes sure we dont continue with a request that is on the way out if we switch away from the component that triggered the request\n  useEffect(() => {\n    //when your return a function in here then it is executed as a cleanup function before the next time useEffect is ran or when the component that uses the useEffect unmounts\n    return () => {\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","import { createContext } from \"react\";\n\nexport const AuthContext = createContext({\n  //all this data is managed in App.js\n  isLoggedIn: false,\n  userId: null,\n  token: null,\n  login: () => {},\n  logout: () => {}\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport \"./Modal.css\";\nimport Backdrop from \"./Backdrop\";\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React, { useRef, useEffect } from \"react\"; //\n\nimport \"./Map.css\";\n\nconst Map = props => {\n  const mapRef = useRef();\n\n  const { center, zoom } = props;\n\n  useEffect(() => {\n    // this is a hook that reruns everytime props are updated, so when the JSX below runs this function will rerun and the connection will be established by the time the code inside runs\n    // in other words it allows to register some logic which is executed when certain dependencies (in this case center and zoom) change. useEffect logic re-runs only After the componengt was re-evaluated\n    const map = new window.google.maps.Map(mapRef.current, {\n      center: props.center,\n      zoom: props.zoom\n    });\n\n    new window.google.maps.Marker({ position: props.center, map: map });\n  }, [center, zoom]); // dependencies that trigger the execution of the logic when changed\n\n  return (\n    <div ref={mapRef} className={`map ${props}`} style={props.style}></div>\n  );\n};\n\nexport default Map;\n","import React, { useState, useContext } from \"react\";\n\nimport \"./PlaceItem.css\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Modal from \"../../shared/components/UIElements/Modal\";\nimport Map from \"../../shared/components/UIElements/Map\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\n\n//hooks\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\n\nconst PlaceItem = props => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const auth = useContext(AuthContext);\n  const [showMap, setShowMap] = useState(false);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  const openMapHandler = () => setShowMap(true);\n  const closeMapHandler = () => setShowMap(false);\n\n  const showDeleteWarningHandler = () => {\n    setShowConfirmModal(true);\n  };\n\n  const cancelDeleteHandler = () => {\n    setShowConfirmModal(false);\n  };\n\n  const confirmDeleteHandler = async () => {\n    setShowConfirmModal(false);\n    try {\n      await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + `/places/${props.id}`,\n        \"DELETE\",\n        null, // we do not need to send body\n        {\n          Authorization: \"Bearer \" + auth.token\n        }\n      );\n      props.onDelete(props.id);\n    } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Modal\n        show={showMap}\n        onCancel={closeMapHandler}\n        header={props.address}\n        contentClass=\"place-item__modal-conent\"\n        footerClass=\"place-item__modal-actions\"\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\n      >\n        <div className=\"map-container\">\n          <Map center={props.coordinates} zoom={16} />\n        </div>\n      </Modal>\n      <Modal\n        show={showConfirmModal}\n        onCancel={cancelDeleteHandler}\n        header=\"Are you sure?\"\n        footerClass=\"place-item_modal-actions\"\n        footer={\n          <React.Fragment>\n            <Button inverse onClick={cancelDeleteHandler}>\n              CANCEL\n            </Button>\n            <Button danger onClick={confirmDeleteHandler}>\n              DELETE\n            </Button>\n          </React.Fragment>\n        }\n      >\n        <p>\n          Are you sure you would like to delete this location? This action\n          cannot be undone.\n        </p>\n      </Modal>\n      <div className=\"place-item\">\n        <Card className=\"place-item__content\">\n          {isLoading && <LoadingSpinner asOverlay />}\n          <div className=\"place-item__image\">\n            <img src={props.image} alt={props.title} />\n          </div>\n          <div className=\"place-item__info\">\n            <h3>{props.title}</h3>\n            <h4>{props.address}</h4>\n            <p className=\"place-item__description\">{props.description}</p>\n            <p>\n              <i>Submitted by {props.creatorName}</i>\n            </p>\n          </div>\n          <div className=\"place-item__actions\">\n            <Button inverse onClick={openMapHandler}>\n              VIEW ON MAP\n            </Button>\n            {auth.userId === props.creatorId && (\n              <React.Fragment>\n                <Button inverse to={`/places/${props.id}`}>\n                  EDIT\n                </Button>\n                <Button danger onClick={showDeleteWarningHandler}>\n                  DELETE\n                </Button>\n              </React.Fragment>\n            )}\n          </div>\n        </Card>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default PlaceItem;\n","import React from \"react\";\n\nimport \"./PlaceList.css\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport PlaceItem from \"./PlaceItem\";\n\nconst PlaceList = props => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"place-list center\">\n        <Card>\n          <h2>No places found. Maybe create one?</h2>\n          <Button to=\"/places/new\">Share a Place</Button>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"place-list-grid\">\n      {props.items.map(place => (\n        <PlaceItem\n          key={place.id}\n          id={place.id}\n          image={place.image}\n          title={place.title}\n          description={place.description}\n          address={place.address}\n          creatorId={place.creator._id}\n          creatorName={place.creator.name}\n          coordinates={place.location}\n          onDelete={props.onDeletePlace}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default PlaceList;\n","import { useState, useCallback, useEffect } from \"react\";\n\nlet logoutTimer;\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState(false);\n\n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n    const tokenExpirationDate = // thanks to scoping this is a different variable than the one outside this function\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60); //Date is a built-in js browser API. We create new date object set it to current date with another new date get the time since the beggining of the day and math up an hour in milliseconds to set it to the time an hour later which is when we set our token to expire\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem(\n      \"userData\",\n      // global js browser API that will store our token in the browser so that we can use that data for ue when the page is refreshed or the browser is restarted users stay logged in. We have to make sure our app is secure as local storage can be accessed from outside. React also has built-in sanitizing that helps with security as long as we use react code.\n      JSON.stringify({\n        //we need to store data in form of text, hence converting object to json\n        userId: uid,\n        token: token,\n        expiration: tokenExpirationDate.toISOString() //toISOString is a special kind of string which makes sure no data gets lost when a date is stringified and it can be converted back to a date later\n      })\n    );\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(false);\n    setUserId(null);\n    localStorage.removeItem(\"userData\");\n  }, []);\n\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime =\n        tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n\n  useEffect(() => {\n    // useEffect runs after everything else is rendered. Not including anything in the square brackets ensures its rendered only when the app is first started. In this case we have a dependency (login) but because of the useCallback above the code will still run only once\n    const storedData = JSON.parse(localStorage.getItem(\"userData\")); // JSON.parse converts the text back to js object\n    if (\n      storedData &&\n      storedData.token &&\n      new Date(storedData.expiration) > new Date() // this converts the expiration back to a date and compares to see if it has been expired by checking if the expiration milliseconds is greater than the current milliseconds from the begginging of the day\n    ) {\n      login(\n        storedData.userId,\n        storedData.token,\n        new Date(storedData.expiration) //forwarding the expiration to login\n      );\n    }\n  }, [login]);\n\n  return { token, login, logout, userId };\n};\n","import React from \"react\";\n\nimport \"./MainHeader.css\";\n\nconst MainHeader = props => {\n  return <header className=\"main-header\">{props.children}</header>;\n};\n\nexport default MainHeader;\n","import React, { useContext } from \"react\";\nimport { NavLink } from \"react-router-dom\"; //special component imported for navigation links that also show active page links\n\nimport \"./NavLinks.css\";\nimport { AuthContext } from \"../../context/auth-context\";\nimport Button from \"../FormElements/Button\";\n\nconst NavLinks = props => {\n  const auth = useContext(AuthContext);\n\n  return (\n    <div className=\"nav-links\">\n      <div className=\"nav-link-each\">\n        <NavLink to=\"/\" exact>\n          All Courts\n        </NavLink>\n      </div>\n      {auth.isLoggedIn && (\n        <div className=\"nav-link-each\">\n          <NavLink to={`/${auth.userId}/places`}>My Courts</NavLink>\n        </div>\n      )}\n      {auth.isLoggedIn && (\n        <div className=\"nav-link-each\">\n          <NavLink to=\"/places/new\">Add a Court</NavLink>\n        </div>\n      )}\n      {!auth.isLoggedIn && (\n        <div className=\"nav-link-each\">\n          <NavLink to=\"/auth\">Login | Sign Up</NavLink>\n        </div>\n      )}\n      {auth.isLoggedIn && (\n        <div className=\"nav-link-each\">\n          <Button onClick={auth.logout}>Logout</Button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default NavLinks;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport \"./SideDrawer.css\";\n\nconst SideDrawer = props => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>\n        {props.children}\n      </aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById(\"drawer-hook\"));\n};\n\nexport default SideDrawer;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./MainNavigation.css\";\nimport MainHeader from \"./MainHeader\";\nimport NavLinks from \"./NavLinks\";\nimport SideDrawer from \"./SideDrawer\";\nimport Backdrop from \"../UIElements/Backdrop\";\n\nconst MainNavigation = props => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n      <MainHeader>\n        <button\n          className=\"main-navigation__menu-btn\"\n          onClick={openDrawerHandler}\n        >\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">\n            <img\n              className=\"hs-logo\"\n              src=\"https://res.cloudinary.com/hrs6ayhkh/image/upload/v1581811430/app/HoopScoopLogo_dq71wf.png\"\n              alt=\"HoopScoopLogo\"\n            />\n          </Link>\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </React.Fragment>\n  );\n};\n\nexport default MainNavigation;\n","import { useState, useEffect } from \"react\";\n\nconst defaultSettings = {\n  enableHighAccuracy: false,\n  timeout: Infinity,\n  maximumAge: 0\n};\n\nexport const usePosition = (watch = false, settings = defaultSettings) => {\n  const [position, setPosition] = useState({});\n  const [error, setError] = useState(null);\n\n  const onChange = ({ coords, timestamp }) => {\n    setPosition({\n      latitude: coords.latitude,\n      longitude: coords.longitude,\n      accuracy: coords.accuracy,\n      timestamp\n    });\n  };\n\n  const onError = error => {\n    setError(error.message);\n  };\n\n  useEffect(() => {\n    const geo = navigator.geolocation;\n    if (!geo) {\n      setError(\"Geolocation is not supported\");\n      return;\n    }\n\n    let watcher = null;\n    if (watch) {\n      watcher = geo.watchPosition(onChange, onError, settings);\n    } else {\n      geo.getCurrentPosition(onChange, onError, settings);\n    }\n\n    return () => watcher && geo.clearWatch(watcher);\n  }, [settings]);\n\n  return { ...position, error };\n};\n","import React, { useRef, useEffect, useState } from \"react\";\n\nimport \"./Map.css\";\n\nimport { usePosition } from \"./usePosition\";\n\nconst Map = props => {\n  const mapRef = useRef();\n\n  const { longitude, latitude, error } = usePosition();\n\n  const currentPosition = { lat: latitude, lng: longitude };\n\n  const markers = props.center;\n\n  useEffect(() => {\n    // this is a hook that reruns everytime props are updated, so when the JSX below runs this function will rerun and the connection will be established by the time the code inside runs\n    // in other words it allows to register some logic which is executed when certain dependencies (in this case center and zoom) change. useEffect logic re-runs only After the componengt was re-evaluated\n\n    const map = new window.google.maps.Map(mapRef.current, {\n      center: currentPosition,\n      zoom: 16\n    });\n\n    console.log(longitude, latitude);\n\n    new window.google.maps.Marker({\n      position: currentPosition,\n      map: map,\n      icon: {\n        url: \"http://maps.google.com/mapfiles/ms/micons/man.png\"\n      }\n    });\n\n    markers.map(function(marker) {\n      new window.google.maps.Marker({\n        position: marker.location,\n        map: map,\n        icon: {\n          url: \"http://maps.google.com/mapfiles/ms/micons/purple.png\"\n        }\n      });\n    });\n  }, [currentPosition]); // dependencies that trigger the execution of the logic when changed\n\n  return (\n    <div ref={mapRef} className={`map ${props}`} style={props.style}></div>\n  );\n};\n\nexport default Map;\n","import React, { useEffect, useState } from \"react\"; //useEffect to make sure we send the request when the component renders but not when it re-renders\nimport { useParams } from \"react-router-dom\";\n\nimport \"./AllPlaces.css\";\n\nimport PlaceList from \"./PlaceList\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport Map from \"../../shared/components/UIElements/Map\";\nimport AllPlacesMap from \"../../shared/components/UIElements/AllPlacesMap\";\n\n//hooks\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\n\nconst AllPlaces = () => {\n  const [loadedPlaces, setLoadedPlaces] = useState();\n\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try {\n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL + \"/places/\"\n        );\n        setLoadedPlaces(responseData.places);\n      } catch (err) {}\n    };\n    fetchPlaces();\n  }, [sendRequest]);\n\n  const placeDeletedHandler = deletedPlaceId => {\n    setLoadedPlaces(prevPlaces =>\n      prevPlaces.filter(place => place.id !== deletedPlaceId)\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedPlaces && (\n        <div>\n          <div className=\"all-places-map-container\">\n            <AllPlacesMap center={loadedPlaces} zoom={16} />\n          </div>\n          <div className=\"all-places-grid-container\">\n            <PlaceList\n              items={loadedPlaces}\n              onDeletePlace={placeDeletedHandler}\n            />\n          </div>\n        </div>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default AllPlaces;\n","import React, { Suspense } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from \"react-router-dom\";\n\nimport Users from \"./user/pages/Users\";\n//import NewPlace from \"./places/pages/NewPlace\";\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\n//import UserPlaces from \"./places/pages/UserPlaces\";\n//import UpdatePlace from \"./places/pages/UpdatePlace\";\n//import Auth from \"./user/pages/Auth\";\nimport { AuthContext } from \"./shared/context/auth-context\";\nimport { useAuth } from \"./shared/hooks/auth-hook\";\nimport LoadingSpinner from \"./shared/components/UIElements/LoadingSpinner\";\nimport AllPlaces from \"./places/components/AllPlaces\";\n\n//code splitting. this allows the app not to load the following components initially and only load them whenever the components are needed for faster load and better UX. The only other thing that we need to add to make this work is at the very bottom in our JSX where we render routes in our router component we need to wrap it in a <Suspense> and give it a prop of fallback which allows us to render something while the component is loading if it is taking some time\nconst NewPlace = React.lazy(() => import(\"./places/pages/NewPlace\"));\nconst UserPlaces = React.lazy(() => import(\"./places/pages/UserPlaces\"));\nconst UpdatePlace = React.lazy(() => import(\"./places/pages/UpdatePlace\"));\nconst Auth = React.lazy(() => import(\"./user/pages/Auth\"));\n\nconst App = () => {\n  const { token, login, logout, userId } = useAuth();\n\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <AllPlaces />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\">\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <AllPlaces />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\" exact>\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>\n          {/*Switch works with Redirect so that it only redirects if the other paths are not mathched*/}\n          <Suspense\n            fallback={\n              <div className=\"center\">\n                <LoadingSpinner />\n              </div>\n            }\n          >\n            {routes}\n          </Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}