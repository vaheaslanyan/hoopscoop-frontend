{"version":3,"sources":["shared/util/validators.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/components/FormElements/ImageUpload.js","places/pages/NewPlace.js"],"names":["VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","value","validators","isValid","validator","trim","length","test","inputReducer","state","action","isTouched","Input","props","useReducer","initialValue","initialValid","inputState","dispatch","id","onInput","useEffect","changeHandler","event","target","touchHandler","element","placeholder","onChange","onBlur","rows","className","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","ImageUpload","useState","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","pickedFile","fileIsValid","files","center","src","alt","onClick","current","click","NewPlace","auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","title","description","address","image","inputHandler","history","useHistory","placeSubmitHandler","a","preventDefault","formData","FormData","append","process","Authorization","token","push","Fragment","onClear","onSubmit","disabled"],"mappings":"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","file":"static/js/3.be60feb3.chunk.js","sourcesContent":["const VALIDATOR_TYPE_REQUIRE = \"REQUIRE\";\nconst VALIDATOR_TYPE_MINLENGTH = \"MINLENGTH\";\nconst VALIDATOR_TYPE_MAXLENGTH = \"MAXLENGTH\";\nconst VALIDATOR_TYPE_MIN = \"MIN\";\nconst VALIDATOR_TYPE_MAX = \"MAX\";\nconst VALIDATOR_TYPE_EMAIL = \"EMAIL\";\nconst VALIDATOR_TYPE_FILE = \"FILE\";\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from \"react\"; //useReducer is like useState but for more complex interconnected states\n\nimport \"./Input.css\";\nimport { validate } from \"../../util/validators\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        ...state, // spread operator that copies the old state object with its key value pairs intpo the new object\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case \"TOUCH\": {\n      return {\n        ...state,\n        isTouched: true\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || \"\",\n    isTouched: false,\n    isValid: props.initialValid || false\n  }); //the second argument is optional and it sets up an initail state\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(props.id, inputState.value, inputState.isValid);\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: \"CHANGE\",\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: \"TOUCH\"\n    });\n  };\n\n  const element =\n    props.element === \"input\" ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        value={inputState.value}\n        onBlur={touchHandler} //is triggered when the user has clicked on the element and then clicked away\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        value={inputState.value}\n        onBlur={touchHandler}\n      />\n    );\n  return (\n    <div\n      className={`form-control ${!inputState.isValid &&\n        inputState.isTouched &&\n        \"form-control--invalid\"}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import { useCallback, useReducer } from \"react\";\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case \"INPUT_CHANGE\":\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue; //if the state is undefined then it will just skip that input\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case \"SET_DATA\":\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback(\n    (id, value, isValid) => {\n      dispatch({\n        type: \"INPUT_CHANGE\",\n        value: value,\n        isValid: isValid,\n        inputId: id\n      });\n    },\n    [dispatch]\n  ); //useCallback is used to avoid an inifinite loop this code might create through use of dependenices\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: \"SET_DATA\",\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};\n","import React, { useRef, useState, useEffect } from \"react\";\n\nimport \"./ImageUpload.css\";\nimport Button from \"./Button\";\n\nconst ImageUpload = props => {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n\n  const filePickerRef = useRef();\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader(); // built-in browser API\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const pickedHandler = event => {\n    let pickedFile;\n    let fileIsValid = isValid;\n\n    if (event.target.files && event.target.files.length === 1) {\n      // files is a default js for inputs with type file\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click(); //this will open up the input\n  };\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: \"none\" }}\n        type=\"file\"\n        accept=\".jpg, .png, .jpeg\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && \"center\"}`}>\n        <div className=\"image-upload__preview\">\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n          {!previewUrl && <p>Please pick an image</p>}\n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>\n          PICK IMAGE\n        </Button>\n      </div>\n      {!isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\"; // will be used for redirecting\n\nimport \"./PlaceForm.css\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH\n} from \"../../shared/util/validators\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\n\n//hooks\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\n\nconst NewPlace = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const [formState, inputHandler] = useForm(\n    {\n      title: {\n        value: \"\",\n        isValid: false\n      },\n      description: {\n        value: \"\",\n        isValid: false\n      },\n      address: {\n        value: \"\",\n        isValid: false\n      },\n      image: {\n        value: null,\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const history = useHistory();\n\n  const placeSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      const formData = new FormData();\n      formData.append(\"title\", formState.inputs.title.value);\n      formData.append(\"description\", formState.inputs.description.value);\n      formData.append(\"address\", formState.inputs.address.value);\n      formData.append(\"image\", formState.inputs.image.value);\n\n      await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + \"/places\",\n        \"POST\",\n        formData,\n        {\n          Authorization: \"Bearer \" + auth.token\n        }\n      );\n      history.push(\"/\"); //redirecting user via a react-router-dom method\n    } catch (err) {}\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\n        {isLoading && <LoadingSpinner />}\n        <Input\n          id=\"title\"\n          element=\"input\"\n          type=\"text\"\n          label=\"Title\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid title\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"description\"\n          element=\"textarea\"\n          label=\"Description\"\n          validators={[VALIDATOR_MINLENGTH(5)]}\n          errorText=\"Please enter a valid description (at lease 5 characters)\"\n          onInput={inputHandler}\n        />\n        <Input\n          id=\"address\"\n          element=\"input\"\n          label=\"Address\"\n          validators={[VALIDATOR_REQUIRE()]}\n          errorText=\"Please enter a valid address\"\n          onInput={inputHandler}\n        />\n        <ImageUpload\n          id=\"image\"\n          onInput={inputHandler}\n          errorText=\"Please upload an image\"\n        />\n        <Button type=\"submit\" disabled={!formState.isValid}>\n          ADD PLACE\n        </Button>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default NewPlace;\n"],"sourceRoot":""}